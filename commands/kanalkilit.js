const { ButtonStyle } = require('discord.js');
    const { ActionRowBuilder, ButtonBuilder } = require('discord.js');
    const config = require('../config.json');

    module.exports = {
    name: 'kanalkilit',
    description: 'Belirtilen rolÃ¼n kanala yazma yetkisini kapatÄ±r veya aÃ§ar.',
    async execute(message, args) {
        const yetkiliRolID = config.OwnerRoleID;

        if (!message.member.roles.cache.has(yetkiliRolID)) {
        return message.reply('Bu komutu kullanmak iÃ§in gerekli yetkiye sahip deÄŸilsiniz.');
        }

        const hedefRolAdi = config.WhitelitRole;

        const hedefRol = message.guild.roles.cache.find(rol => rol.id === hedefRolAdi);

        if (!hedefRol) {
          return message.reply(`"${hedefRolAdi}" adÄ±nda bir rol bulunamadÄ±.`);
        }
    
        const kapatButton = new ButtonBuilder()
          .setCustomId('kapatButton')
          .setLabel('ğŸ”’ Kapat')
          .setStyle(ButtonStyle.Danger);
    
        const acButton = new ButtonBuilder()
          .setCustomId('acButton')
          .setLabel('ğŸ”“ AÃ§ / SÄ±fÄ±rla')
          .setStyle(ButtonStyle.Success);
    
        const row = new ActionRowBuilder().addComponents(kapatButton, acButton);
    
        const msg = await message.channel.send({
          content: `
\`\`\`fix
Kanala mesaj gÃ¶ndermeyi kapatmak veya aÃ§mak mÄ± istiyorsun? AÅŸaÄŸÄ±daki butonlarÄ± kullan.
\`\`\``,
          components: [row],
        });
    
        const filter = interaction => interaction.customId === 'kapatButton' || interaction.customId === 'acButton';
        const collector = msg.createMessageComponentCollector({ filter, time: 15000 }); // 15 saniye boyunca bekler
    
        collector.on('collect', async interaction => {
          collector.stop(); // Ä°lk butona tÄ±klama sonrasÄ±nda collect eventini durdur
    
          const kilitlenecekKanal = message.channel;
          let kilitDurumu = null;
    
          if (interaction.customId === 'kapatButton') {
            kilitDurumu = true;
          } else if (interaction.customId === 'acButton') {
            kilitDurumu = null;
          }
    
          // KanalÄ±n izinlerini gÃ¼ncelle veya sÄ±fÄ±rla
          await kilitlenecekKanal.permissionOverwrites.edit(hedefRol, {
            SEND_MESSAGES: kilitDurumu,
          });
    
          // MesajÄ± gÃ¼ncelle
          const durumMesaji = kilitDurumu === true ? 'Kanal Kilitlendi' : 'Kanal Tekrardan AÃ§Ä±ldÄ±';
          msg.edit({ content: `
\`\`\`yaml
Kanal Durumu: ${durumMesaji}
\`\`\``, components: [] });
        });
    
        collector.on('end', collected => {
          if (collected.size === 0) {
            // Zaman aÅŸÄ±mÄ±na uÄŸradÄ±ÄŸÄ±nda
            msg.edit({ content: 'Ä°ÅŸlem zaman aÅŸÄ±mÄ±na uÄŸradÄ±.', components: [] });
          }
        });
      },
    };